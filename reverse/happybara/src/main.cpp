#pragma GCC target("avx2")
#pragma GCC optimize("O3,unroll-loops")
#include <bits/stdc++.h>
#include <immintrin.h>
using namespace std;
#define ll long long
#define uint unsigned int
#define ull unsigned long long
#define FOR(i,val,n) for(int i=val;i<n;i++)
#define FORD(i,n) for(int i=0;i<n;i++)
#define DMAT(dp,n,m) for(int i=0;i<n;i++){for(int j=0;j<m;j++)cout << dp[i][j] << ' ';cout << '\n';}

uint32_t KEY[4];  // Key space for bit shifts

void encrypt(uint32_t* v) {
  uint32_t v0=v[0], v1=v[1], sum=0, i;             // set up
  uint32_t delta=0x9e3779b9;                       // a key schedule constant
  for (i=0; i < 32; i++) {                         // basic cycle start
    sum += delta;
    v0 += ((v1<<4) + KEY[0]) ^ (v1 + sum) ^ ((v1>>5) + KEY[1]);
    v1 += ((v0<<4) + KEY[2]) ^ (v0 + sum) ^ ((v0>>5) + KEY[3]);  
  }                                                // end cycle 
  v[0]=v0; v[1]=v1;
}

int main(){
    vector<uint32_t> check = {4132310152, 1866498532, 1183008605, 2518641626, 3097201345, 3780380708, 1583921474, 1148846913, 4073317242, 3561865707, 2002860216, 1205207532, 2876098977, 3035341318, 450857723, 2704353448, 375646528, 2962470323, 3038769058, 1034668718, 3108138136, 1147791141, 3419963413, 4048282215, 754954870, 2675200682, 1350375353, 1869608568, 1216100994, 4275890343, 2610252853, 2210485639, 2741672581, 3119163922, 1311678170, 4004324844, 1269096590, 2124026210, 2844371849, 434199783, 2798573833, 1445478433, 1118167479, 2388250642, 286942336, 3166764668, 2572199952, 3403624866, 766524875, 1288968985, 2961236391, 4124267141, 2124393203, 3510845205, 257553998, 2768970912, 3791404293, 2629770214, 969088868, 1219052214, 2824387950, 3653601583, 1406118263, 2317835014, 2196190243, 3526041120, 152778721, 1916143738, 2323106352, 1722918377, 2466083785, 1824965524, 4086257438, 2269846970, 3291521760, 1997480625, 4084884049, 382190893, 3720059461, 1970463936, 3631385123, 2813050646, 1396124973, 654922642, 2698682666, 919310787, 580096769, 3311061565, 3409430633, 1459015752, 3127479895, 3168801793, 3107866279, 3350880589, 2031141902, 4171891312, 3550043237, 1961436236, 3256284713, 3970887271, 2254292391, 3284099336, 2639493712, 296469272, 1298199632, 2925197008, 1999038312, 2551084010, 269291566, 2641244888, 2170130775, 1614821151, 2477396350, 1094489609, 3631728567, 77122700, 2952073419, 2716953231, 3137425580, 128924181, 1803396270, 473124770, 1662768681, 700096685, 2509624236, 2891960468, 715719581, 1505432547, 3228807254, 2494535501, 1421561532, 1954396273, 1153356261, 546116582};
    // string text = "HAHAHAHAHAPPPPY_CAPYBARA_IN_MY_FEEEEEEED_I_WANNA_DIE_I_THINK_ABOUT_CAPYBARAS_NOT_ABOUT_HER_CTF{I_LOVE_WHEN_I_SEE_CAPYBARAS_IN_VK_FEED}";
    string text;
    cin >> text;
    FORD(i,check.size()){
        auto symbol = text[i];
        uint32_t v[2] = {symbol,i+13337};
        encrypt(v);
        uint32_t crc = _mm_crc32_u32(0xFFFFFFFF,v[1]) +  _mm_crc32_u32(0xFFFFFFFF,v[0]);
        // cout << crc << ", ";
        if (crc != check[i]){
            cout << "CHECK FAILED";
            break;
        }
    }
    return 0;
}